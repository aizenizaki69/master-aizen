package com.mycompany.myapp.fragment;

import android.app.Fragment;
import android.content.ComponentName;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.IBinder;
import com.mycompany.myapp.model.ExceptionHandler;
import com.mycompany.myapp.service.InjectorService;
import com.mycompany.myapp.service.SSHTunnelService;
import com.mycompany.myapp.model.StatusChangeListener;

public abstract class BaseFragment extends Fragment implements StatusChangeListener
{
    private InjectorService injector_service;
    private SSHTunnelService ssh_tunnel;
    private ServiceConnection injection_service = new ServiceConnection(){
        @Override
        public void onServiceConnected(ComponentName p1, IBinder p2)
        {
            injector_service = ((InjectorService.InjectorBinder)p2).getService();
        }
        @Override
        public void onServiceDisconnected(ComponentName p1){
            injector_service = null;
        }
    }; 
    private ServiceConnection ssh_service = new ServiceConnection(){
        @Override
        public void onServiceConnected(ComponentName p1, IBinder p2){
         ssh_tunnel = ((SSHTunnelService.SSHTunnelBinder)p2).getService();            
        }
        @Override
        public void onServiceDisconnected(ComponentName p1){
         ssh_tunnel = null;
            // TODO: Implement this method
        }
    };
    protected void doBind()
    {
        Thread.setDefaultUncaughtExceptionHandler(new ExceptionHandler(getActivity()));
        SSHTunnelService.addOnStatusChangedListener(this);
        getActivity().bindService(new Intent(getActivity(), InjectorService.class), injection_service,getActivity().BIND_AUTO_CREATE);
        getActivity().bindService(new Intent(getActivity(), SSHTunnelService.class), ssh_service,getActivity().BIND_AUTO_CREATE);
    }
    protected void doUnbind() {
        SSHTunnelService.removeOnStatusChangedListener(this);
        if (injector_service != null) {
            getActivity().unbindService(injection_service);
            injector_service = null;
        }
        if (ssh_tunnel != null) {
            getActivity().unbindService(ssh_service);
            ssh_tunnel = null;
        }
    }   
    protected void startVPN(){
        Intent intent = new Intent(getActivity(), InjectorService.class);
        getActivity().startService(intent.setAction("START"));
    }
    
    protected void stopVPN(){
        if (injector_service != null) {
            injector_service.stopInjector();
        }
        if (ssh_tunnel != null) {
            ssh_tunnel.disconnectTunnel();
			ssh_tunnel.onDisconnect();
        }
    }
}
